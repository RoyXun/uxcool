@import '../../style/themes/index';
@import '../../style/mixins/index';
@import '../../style/functions/height';
@import 'mixin';

@function calc-button-height($font-size, $padding, $line-height: $btn-line-height, $border: $btn-border-width) {
  @return calc-css-outer-height($font-size, $padding, $line-height, $border);
}

// Base style
.#{$ux-prefix}-btn {
  $btn-color: color-yiq($btn-bg);

  display: inline-block;
  background: $btn-bg;
  border: $btn-border-width solid $btn-border-color;
  color: $btn-color;
  font-weight: $btn-font-weight;
  white-space: nowrap;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  user-select: none;
  outline: none;
  cursor: pointer;

  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  &:hover,
  &:focus,
  &.focus {
    color: $primary-color;
    border-color: darken($primary-color, 7.5%);
  }

  &:active,
  &.active {
    color: darken($primary-color, 10%);
    border-color: darken($primary-color, 10%);
  }

  &.disabled,
  &:disabled {
    border-color: $btn-border-color;
    color: $btn-color;
    opacity: 0.65;
    cursor: $btn-disabled-cursor;
  }
}

a.#{$ux-prefix}-btn {
  &.disabled,
  fieldset[disabled] & {
    pointer-events: none;
  }
}

// basic button
// ----------------------------------------------
// theme style
@each $color, $value in $theme-colors {
  @if $color != 'default' {
    .#{$ux-prefix}-btn-#{$color} {
      @include button-variant($value, $value);
    }
  }
}

// colored
// @each $color, $value in $colors {
//     .#{$ux-prefix}-btn.#{$color} {
//       @include button-variant($value, $value);
//     }
// }

// inverted variant
// ----------------------------------------------
.#{$ux-prefix}-btn-inverted {
  @include button-inverted-variant($btn-bg, darken($primary-color, 7.5%), darken($primary-color, 12.5%));

  // theme style
  @each $color, $value in $theme-colors {
    @if $color != 'default' {
      &.#{$ux-prefix}-btn-#{$color} {
        @include button-inverted-variant($value);
      }
    }
  }

  // colored style
  // @each $color, $value in $colors {
  //     &.#{$color} {
  //       @include button-inverted-variant($value);
  //     }
  // }
}

// outline variant
// ----------------------------------------------
.#{$ux-prefix}-btn-outline {
  @include button-outline-variant($btn-bg, $primary-color, $primary-color, darken($primary-color, 7.5%));

  // theme style
  @each $color, $value in $theme-colors {
    @if $color != 'default' {
      &.#{$ux-prefix}-btn-#{$color} {
        @include button-outline-variant($value);
      }
    }
  }
  // colored style
  // @each $color, $value in $colors {
  //     &.#{$color} {
  //       @include button-outline-variant($value);
  //     }
  // }
}

// link button
// ----------------------------------------------
.#{$ux-prefix}-btn-link {
  padding-left: 0;
  padding-right: 0;
  font-weight: $font-weight-normal;
  color: $link-color;
  border-color: transparent;
  background-color: transparent;

  &:hover,
  &:focus,
  &.focus {
    color: $link-hover-color;
    border-color: transparent;
  }

  &:disabled,
  &.disabled {
    border-color: transparent;
    color: $btn-link-disabled-color;
  }
}

// with icon
// ----------------------------------------------
.#{$ux-prefix}-btn {
  i {
    height: $btn-font-size;
    margin-right: $btn-icon-spacing;
    vertical-align: baseline;

    &.right {
      margin-left: $btn-icon-spacing;
      margin-right: 0;
    }
  }

}

// square button
// ----------------------------------------------
.#{$ux-prefix}-btn-square {
  $size: round(calc-button-height($btn-font-size, $btn-padding-y));
  width: $size;
  height: $size;
  // prevent btn from collapsing in btn-group
  min-width: $size;
  padding-left: 0;
  padding-right: 0;

  > i {
    margin: 0;
  }
}

// circular button
// ----------------------------------------------
.#{$ux-prefix}-btn-circle {
  @extend .#{$ux-prefix}-btn-square;
  @extend .#{$ux-prefix}-btn-oval;
}

// oval button
// ----------------------------------------------
.#{$ux-prefix}-btn-oval {
  border-radius: round(calc-button-height($btn-font-size, $btn-padding-y));
}

// block
// ----------------------------------------------
.#{$ux-prefix}-btn-block {
  display: block;
  width: 100%;
}

// loading
// ----------------------------------------------
.#{$ux-prefix}-btn.#{$ux-prefix}-btn-loading {
  position: relative;
  pointer-events: none;
  
  // TODO replace with iconfont
  &::before {
    content: '';
    display: inline-block;
    width: $btn-font-size;
    height: $btn-font-size;
    margin-right: $btn-icon-spacing;
    border-color: $btn-loading-color $btn-loading-rail-color $btn-loading-rail-color;
    border-width: $btn-loading-width;
    border-style: solid;
    border-radius: $btn-font-size;
    animation: #{$ux-prefix}-spin $btn-loading-spin-speed $btn-loading-spin-function;
    animation-iteration-count: infinite;
    vertical-align: top;
    cursor: $btn-loading-cursor;
  }
  
  &::after {
    content: '';
    position: absolute;
    top: -1px;
    right: -1px;
    bottom: -1px;
    left: -1px;
    background: rgba(255,255,255,.35);
    z-index: 1;
  }

  // &:hover,
  // &:focus,
  // &.focus,
  // &:active,
  // &.active {
  //   color: transparent;
  // }
}

// button group
// ----------------------------------------------
.#{$ux-prefix}-btn-group,
.#{$ux-prefix}-btn-group-vertical {
  @if $enable-flex {
    display: inline-flex;
  } @else {
    display: inline-block;
  }
  position: relative;
  vertical-align: middle;

  > .#{$ux-prefix}-btn {
    @if $enable-flex {
      flex: 1 1 auto;
    }

    margin: 0;

    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      z-index: 2;
    }
  }
}

// horizontal
.#{$ux-prefix}-btn-group {
  > .#{$ux-prefix}-btn {
    @if not $enable-flex {
      float: left;
    }
  }

  & > &:not(:last-child) > .#{$ux-prefix}-btn,
  & > .#{$ux-prefix}-btn:not(:last-child) {
    @include border-right-radius(0);
  }
  & > &:not(:first-child) > .#{$ux-prefix}-btn,
  & > .#{$ux-prefix}-btn:not(:first-child) {
    @include border-left-radius(0);
  }

  .#{$ux-prefix}-btn + .#{$ux-prefix}-btn,
  .#{$ux-prefix}-btn + .#{$ux-prefix}-btn-group,
  .#{$ux-prefix}-btn-group + .#{$ux-prefix}-btn,
  .#{$ux-prefix}-btn-group + .#{$ux-prefix}-btn-group {
    margin-left: -$btn-border-width;
  }
}

// vertical
.#{$ux-prefix}-btn-group-vertical {
  @if $enable-flex {
    flex-direction: column;
  } @else {
    > .#{$ux-prefix}-btn,
    > .#{$ux-prefix}-btn-group > .#{$ux-prefix}-btn-group > .#{$ux-prefix}-btn {
      display: block;
      width: 100%;
    }
  }

  & > &:not(:last-child) > .#{$ux-prefix}-btn,
  & > .#{$ux-prefix}-btn:not(:last-child) {
    @include border-bottom-radius(0);
  }
  & > &:not(:first-child) > .#{$ux-prefix}-btn,
  & > .#{$ux-prefix}-btn:not(:first-child) {
    @include border-top-radius(0);
  }

  .#{$ux-prefix}-btn + .#{$ux-prefix}-btn,
  .#{$ux-prefix}-btn + .#{$ux-prefix}-btn-group,
  .#{$ux-prefix}-btn-group + .#{$ux-prefix}-btn,
  .#{$ux-prefix}-btn-group + .#{$ux-prefix}-btn-group {
    margin-top: -$btn-border-width;
  }
}

// justified
.#{$ux-prefix}-btn-group-justified {
  width: 100%;

  @if $enable-flex {
    > .#{$ux-prefix}-btn-group,
    .#{$ux-prefix}-btn {
      flex: 1 1 0;
      // allow shrinking below minimum content width.
      // need user to override style when there is no more space for too long content.
      min-width: 0;
      overflow: hidden;
    }
  } @else {
    display: table;
    table-layout: fixed;
    border-collapse: separate;

    > .#{$ux-prefix}-btn,
    > .#{$ux-prefix}-btn-group {
      float: none;
      display: table-cell;
      width: 1%;
    }
    > .#{$ux-prefix}-btn-group .#{$ux-prefix}-btn {
      width: 100%;
    }
  }
}

// size
// ----------------------------------------------
@each $suffix in map-keys($btn-padding-ys) {
  .#{$ux-prefix}-btn-#{$suffix} {
    $padding-y: map-get($btn-padding-ys, $suffix);
    $padding-x: map-get($btn-padding-xs, $suffix);
    $font-size: map-get($btn-font-sizes, $suffix);
    $line-height: map-get($btn-line-heights, $suffix);
    $border-radius: map-get($btn-border-radiuses, $suffix);

    @include button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius);

    > i {
      height: $font-size;
    }

    &.#{$ux-prefix}-btn-link {
      padding-left: 0;
      padding-right: 0;
    }

    $size: round(calc-button-height($font-size, $padding-y, $line-height));

    &.#{$ux-prefix}-btn-square {
      width: $size;
      height: $size;
      min-width: $size;
      padding-left: 0;
      padding-right: 0;
    }

    &.#{$ux-prefix}-btn-oval {
      border-radius: $size;
    }

    &.#{$ux-prefix}-btn-loading {
      &::before {
        width: $font-size;
        height: $font-size;
      }
    }
  }

  .#{$ux-prefix}-btn-group-#{$suffix} {
    & > .#{$ux-prefix}-btn-group > .#{$ux-prefix}-btn,
    > .#{$ux-prefix}-btn {
      @extend .#{$ux-prefix}-btn-#{$suffix};
    }
  }
}
